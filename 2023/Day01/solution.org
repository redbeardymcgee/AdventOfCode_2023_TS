#+PROPERTY: header-args :tangle solution.ts

#+NAME: imports
#+BEGIN_SRC typescript
import { readData } from '../utils'
#+END_SRC

#+NAME: sample
#+BEGIN_SRC typescript
const sample: string[] = `1abc2
pqr3stu8vwx
a1b2c3d4e5f
treb7uchet
`
  .trim()
  .split("\n")
#+END_SRC

On each line, the calibration value can be found by combining the first digit and the last digit (in that order) to form a single two-digit number.

#+NAME: part1
#+BEGIN_SRC typescript
function part1(input: string[]): number {
  const foobar = input.reduce((acc, line) => {
    const digits = line.split('').filter((c) => /\d/.test(c))
    return acc + Number(digits[0] + digits[digits.length - 1])
  }, 0)
  return foobar
}
#+END_SRC

#+NAME: part2
#+BEGIN_SRC typescript
function part2(input: string[]): number {
  return 0
}
#+END_SRC

#+NAME: tests
#+BEGIN_SRC typescript
describe("Day ", () => {
  const input = readData(__dirname)

  test("part 1", () => {
    expect(part1(sample)).toBe(142)
    expect(part1(input)).toBe(54159)
  })

  test("part 2", () => {
    expect(part2(sample)).toBe(0)
    expect(part2(input)).toBe(0)
  })
})
#+END_SRC
