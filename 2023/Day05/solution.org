#+PROPERTY: header-args :tangle solution.ts :comments both

* Imports
#+NAME: imports
#+BEGIN_SRC typescript
import { readData } from '../utils'
#+END_SRC

* Types
#+NAME: types
#+BEGIN_SRC typescript

#+END_SRC

* Sample Inputs
#+NAME: sample1
#+BEGIN_SRC typescript
const sample1: string[] = `seeds: 79 14 55 13

seed-to-soil map:
50 98 2
52 50 48

soil-to-fertilizer map:
0 15 37
37 52 2
39 0 15

fertilizer-to-water map:
49 53 8
0 11 42
42 0 7
57 7 4

water-to-light map:
88 18 7
18 25 70

light-to-temperature map:
45 77 23
81 45 19
68 64 13

temperature-to-humidity map:
0 69 1
1 0 69

humidity-to-location map:
60 56 37
56 93 4
`
  .trim()
  .split('\n')
#+END_SRC

#+NAME: sample2
#+BEGIN_SRC typescript
const sample2: string[] = `
`
  .trim()
  .split('\n')
#+END_SRC

* Part 1
#+NAME: part1
#+BEGIN_SRC typescript
function part1(input: string[]): number {
  return 0
}

console.log(part1(sample1))
#+END_SRC

* Part 2
#+NAME: part2
#+BEGIN_SRC typescript
function part2(input: string[]): number {
  return 0
}
// console.log(part2(sample))
#+END_SRC

* Tests
#+NAME: tests
#+BEGIN_SRC typescript
// describe(__dirname, () => {
//   const input = readData(__dirname)

//   test('part 1', () => {
//     expect(part1(sample1)).toBe(35)
//     expect(part1(input)).toBe(0)
//   })

//   test('part 2', () => {
//     expect(part2(sample2)).toBe(0)
//     expect(part2(input)).toBe(0)
//   })
// })
#+END_SRC
